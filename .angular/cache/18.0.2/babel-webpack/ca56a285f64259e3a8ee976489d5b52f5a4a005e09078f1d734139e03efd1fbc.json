{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'https://jsonplaceholder.typicode.com/users';\n    }\n    getUsers() {\n      return this.http.get(this.apiUrl).pipe(catchError(this.handleError('getUsers', [])));\n    }\n    getUser(id) {\n      return this.http.get(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError('getUser')));\n    }\n    updateUser(user) {\n      return this.http.put(`${this.apiUrl}/${user.id}`, user).pipe(catchError(this.handleError('updateUser')));\n    }\n    handleError(operation = 'operation', result) {\n      return error => {\n        console.error(error);\n        return of(result);\n      };\n    }\n    static #_ = this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}