{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {}\n    register(username, email, password) {\n      const user = {\n        id: Math.floor(Math.random() * 1000),\n        username,\n        email,\n        password,\n        role: 'User'\n      };\n      let storedUsers = JSON.parse(localStorage.getItem('users')) || [];\n      storedUsers.push(user);\n      localStorage.setItem('users', JSON.stringify(storedUsers));\n      console.log('მომხმარებელი დარეგისტრირდა:', user);\n      return of(user);\n    }\n    login(email, password) {\n      console.log('ავტორიზაცია ხდება:', {\n        email,\n        password\n      });\n      let storedUsers = JSON.parse(localStorage.getItem('users')) || [];\n      let user = storedUsers.find(u => u.email === email && u.password === password);\n      if (user) {\n        console.log('მომხმარებელი ნაპოვნია:', user);\n        localStorage.setItem('user', JSON.stringify(user));\n        return of(user);\n      } else {\n        console.error('არასწორი მონაცემები');\n        return of({\n          error: 'Invalid credentials'\n        });\n      }\n    }\n    logout() {\n      localStorage.removeItem('user');\n    }\n    isLoggedIn() {\n      return !!localStorage.getItem('user');\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}